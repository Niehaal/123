% Facts about relationships
parent(john, mary).
parent(john, bob).
parent(mary, anne).
parent(bob, peter).
parent(peter, susan).

% Rules for explaining relationships
mother(X, Y) :- parent(X, Y), female(X).
father(X, Y) :- parent(X, Y), male(X).
sister(X, Y) :- parent(Z, X), parent(Z, Y), female(X), X \== Y.
brother(X, Y) :- parent(Z, X), parent(Z, Y), male(X), X \== Y.
aunt(X, Y) :- sister(X, Z), parent(Z, Y).
uncle(X, Y) :- brother(X, Z), parent(Z, Y).
cousin(X, Y) :- parent(Z, X), parent(W, Y), brother(Z, W).
grandparent(X, Y) :- parent(X, Z), parent(Z, Y).
greatgrandparent(X, Y) :- parent(X, Z), grandparent(Z, Y).

% Explanation rules
explain_relationship(X, Y, Relationship) :-
    call(Relationship, X, Y).

explain_relationship(Relationship, X, Y) :-
    format("~w is ~w of ~w.", [X, Relationship, Y]).

explain_relationship(mother, X, Y) :-
    explain_relationship("a child of", Y, X).

explain_relationship(father, X, Y) :-
    explain_relationship("a child of", Y, X).

explain_relationship(sister, X, Y) :-
    explain_relationship("a sibling of", Y, X).

explain_relationship(brother, X, Y) :-
    explain_relationship("a sibling of", Y, X).

explain_relationship(aunt, X, Y) :-
    explain_relationship("a sister of ~w", Y, Z),
    explain_relationship("a parent of", X, Z).

explain_relationship(uncle, X, Y) :-
    explain_relationship("a brother of ~w", Y, Z),
    explain_relationship("a parent of", X, Z).

explain_relationship(cousin, X, Y) :-
    explain_relationship("a child of ~w", X, Z1),
    explain_relationship("a child of ~w", Y, Z2),
    explain_relationship("siblings", Z1, Z2).

explain_relationship(grandparent, X, Y) :-
    explain_relationship("a parent of ~w", Y, Z),
    explain_relationship("a parent of", X, Z).

explain_relationship(greatgrandparent, X, Y) :-
    explain_relationship("a parent of ~w", Y, Z),
    explain_relationship("a grandparent of", X, Z).

% Example queries
?- explain_relationship(mother, mary, john).
Mary is a mother of John.

?- explain_relationship(cousin, susan, peter).
Susan is a cousin of Peter.

?- explain_relationship(relationship, X, Y).
X is a relationship of Y.

This program can be used to explain a wide range of relationships, including parent, child, mother, father, sister, brother, aunt, uncle, cousin, grandparent, and greatgrandparent. It can also be used to explain more complex relationships, such as step-parent, step-child, half-sibling, and adopted child.

To use the program, simply query the `explain_relationship/3` predicate with the names of the two people involved and the relationship you want to explain. The program will then print a message explaining the relationship.
